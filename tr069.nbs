version: '3.3'


services:

################################################################################
# real implemented and used services
################################################################################
  genieacs:
    environment:
    - KEEP_SERVICE_RUNNING=yes
    tty: true
    container_name: ${NBS_PROJECT}_genieacs
    hostname: genieacs
    image: ${NBS_PROJECT}_genieacs:${VERSION:-latest}
    build:
        context: ./genieacs
        args:
            - VERSION=${VERSION:-latest}
    depends_on:
      - telco0
    privileged: true
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    ports:
      # 7547 is the cwmp, 7557 is the NBI, 7567 is the FS, 7070 is webui
      - 7547:7547
      - 7557:7557
      - 7567:7567
      - 7070:7070
    expose:
      - '7547'
      - '7557'
      - '7567'
      - '7070'
    volumes:
      - genieacs:/data/db
    networks:
      telco0:

  acsdb:
    container_name: ${NBS_PROJECT}_acsdb
    hostname: acsdb
    image: ${NBS_PROJECT}_acsdb:${VERSION:-latest}
    build:
        context: ./mysql
        args:
            - VERSION=${VERSION:-latest}
    tty: true
    environment:
    - KEEP_SERVICE_RUNNING=yes
    tty: true
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    security_opt:
      - apparmor:docker-default
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - ${MYSQL_PORT:-3306}:3306
    expose:
      # Opens port 3306 on the container
      - '3306'
    volumes:
      # Where our data will be persisted
      - acsdb:/var/lib/mysql
      # all files in db will be executed (*.sh *.sql *.sql.gz) or ignored.
      - ./acsdb/inserts:/docker-entrypoint-initdb.d
    networks:
      telco0:
    depends_on:
      - telco0

  acs:
    environment:
    - KEEP_SERVICE_RUNNING=yes
    tty: true
    container_name: ${NBS_PROJECT}_acs
    hostname: acs
    image: ${NBS_PROJECT}_acs:${VERSION:-latest}
    build:
        context: ./openacs
        args:
            - VERSION=${VERSION:-latest}
    privileged: true
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    security_opt:
      - apparmor:docker-default
    depends_on:
      - acsdb
      - telco0
    ports:
      # <Port exposed> : <jboss>
      - ${MYHTTP_PORT:-8080}:8080
    expose:
      # Opens port 8080 on the container
      - '8080'
    networks:
      telco0:

  stun:
    environment:
    - KEEP_SERVICE_RUNNING=yes
    tty: true
    container_name: ${NBS_PROJECT}_stun
    hostname: stun
    image: ${NBS_PROJECT}_stun:${VERSION:-latest}
    build:
        context: ./stun
        args:
            - VERSION=${VERSION:-latest}
    privileged: true
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    depends_on:
      - telco0
    security_opt:
      - apparmor:docker-default
    expose:
      # Opens stun ports on the container
      - 3478/udp
      - 3479/udp
    networks:
      telco0:

  xmpp:
    environment:
    - KEEP_SERVICE_RUNNING=yes
    tty: true
    container_name: ${NBS_PROJECT}_xmpp
    hostname: xmpp
    image: ${NBS_PROJECT}_xmpp:${VERSION:-latest}
    build:
        context: ./xmpp
        args:
            - VERSION=${VERSION:-latest}
    privileged: true
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    security_opt:
      - apparmor:docker-default
    depends_on:
      - upstream
    expose:
      # Opens xmpp ports on the container
      - 5222
      - 5223
      - 5269
      - 5298/udp
      - 5298
      - 8010
    networks:
      internet:

  web:
    environment:
    - KEEP_SERVICE_RUNNING=yes
    tty: true
    container_name: ${NBS_PROJECT}_web
    hostname: web
    image: ${NBS_PROJECT}_web:${VERSION:-latest}
    build:
        context: ./apache
        args:
            - VERSION=${VERSION:-latest}
    privileged: true
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    volumes:
      - web:/var/www/html/protected
    depends_on:
      - telco0
    security_opt:
      - apparmor:docker-default
    expose:
      # Opens http port on the container
      - 80
    networks:
      telco0:

  nginx:
    environment:
    - KEEP_SERVICE_RUNNING=yes
    tty: true
    container_name: ${NBS_PROJECT}_nginx
    hostname: nginx
    image: ${NBS_PROJECT}_nginx:${VERSION:-latest}
    build:
        context: ./nginx
        args:
            - VERSION=${VERSION:-latest}
    privileged: true
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    depends_on:
      - genieacs
      - acs
      - web
      - telco0
    volumes:
      - ~/.ca:/root/ca
    security_opt:
      - apparmor:docker-default
    expose:
      # Opens http and https port on the container
      - 80
      - 443
    networks:
      telco0:

################################################################################
# gateways
################################################################################

  home0:
    environment:
    - KEEP_SERVICE_RUNNING=yes
    - UPSTREAM_NETWORK_NAME=internet
    - UPSTREAM_GATEWAY_NAME=upstream
    # allowed range is 1-250 to generate addresses in 192.168.IP_ADDRES_BYTE_TO_SERVE.
    - IP_ADDRES_BYTE_TO_SERVE=${HOME0_IP_ADDRES_BYTE:-1}
    - IP_ADDRES_BYTE_RANGE_START=${HOME0_IP_ADDRES_START:-101}
    - IP_ADDRES_BYTE_RANGE_END=${HOME0_IP_ADDRES_END:-110}
    - OWN_IP_ADDRES_BYTE=${HOME0_OWN_IP_ADDRES_BYTE:-100}
    - DEFAULT_LEASE_TIME=${HOME0_DEFAULT_LEASE_TIME:-86400}
    - DOMAIN_TO_SERVE=home0.intern
    - USE_OPTION_125_WORKAROUND=${PATCH_MY_DHCP_SERVER_FOR_OPTION_125_WORKAROUND:-no}
    - USE_OPTION_43_WORKAROUND=${PATCH_MY_DHCP_SERVER_FOR_OPTION_43_WORKAROUND:-no}
    - USE_OPTION_125_MODE=${USE_OPTION_125_MODE:-BBF}
    - USE_OPTION_43_MODE=${USE_OPTION_43_MODE:-none}
    - ACS_URL_TO_USE_OPTION125=${ACS_URL_TO_USE_OPTION125:-http://telco0.public:9000/openacs/acs}
    - ACS_URL_TO_USE_OPTION43=${ACS_URL_TO_USE_OPTION43:-http://telco0.public:7547}
    - PROVISIONING_CODE=${PROVISIONING_CODE:-code12345}
    - WAIT_INTERVAL=${WAIT_INTERVAL:-86400}
    - WAIT_INTERVAL_MULTIPLIER=${WAIT_INTERVAL_MULTIPLIER:-1}

    tty: true
    container_name: ${NBS_PROJECT}_home0
    hostname: home0
    image: ${NBS_PROJECT}_home0:${VERSION:-latest}
    build:
        context: ./home0
        args:
            - VERSION=${VERSION:-latest}
    privileged: true
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    security_opt:
      - apparmor:docker-default
    depends_on:
      - upstream
    expose:
      - 53
      - 53/udp
      - 67/udp
      - 68/udp
    networks:
      internet:
      home0:

# To connect the telco0 network to the 'internet'
  telco0:
    environment:
    - KEEP_SERVICE_RUNNING=yes
    - UPSTREAM_NETWORK_NAME=internet
    - UPSTREAM_GATEWAY_NAME=upstream
    # allowed range is 1-250 to generate addresses in 192.168.IP_ADDRES_BYTE_TO_SERVE.
    - IP_ADDRES_BYTE_TO_SERVE=${TELCO0_IP_ADDRES_BYTE:-2}
    - OWN_IP_ADDRES_BYTE=${TELCO0_OWN_IP_ADDRES_BYTE:-1}
    - DEFAULT_LEASE_TIME=${TELCO0_DEFAULT_LEASE_TIME:-3600}
    - DOMAIN_TO_SERVE=telco0.intern
    tty: true
    container_name: ${NBS_PROJECT}_telco0
    hostname: telco0
    image: ${NBS_PROJECT}_telco0:${VERSION:-latest}
    build:
        context: ./telco0
        args:
        - VERSION=${VERSION:-latest}
    privileged: true
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    security_opt:
      - apparmor:docker-default
    depends_on:
      - upstream
    expose:
      - 53
      - 53/udp
      - 67/udp
      - 68/udp
    networks:
      internet:
      telco0:

# To connect the internetworking network to the upstream 'internet'
  upstream:
    environment:
    - KEEP_SERVICE_RUNNING=yes
    - UPSTREAM_NETWORK_NAME=localupstream
    # allowed range is 1-250 to generate addresses in 192.168.IP_ADDRES_BYTE_TO_SERVE.
    - IP_ADDRES_BYTE_TO_SERVE=${UPSTREAM_IP_ADDRES_BYTE:-3}
    - OWN_IP_ADDRES_BYTE=${UPSTREAM_OWN_IP_ADDRES_BYTE:-1}
    - DEFAULT_LEASE_TIME=${UPSTREAM_DEFAULT_LEASE_TIME:-600}
    - DHCLIENT_TIMEOUT=60
    - DOMAIN_TO_SERVE=public
    - ADDITIONAL_NAMESERVER=${UPSTREAM_ADDITIONAL_NAMESERVER}
    tty: true
    container_name: ${NBS_PROJECT}_upstream
    hostname: upstream
    image: ${NBS_PROJECT}_upstream:${VERSION:-latest}
    build:
        context: ./upstream
        args:
            - VERSION=${VERSION:-latest}
    privileged: true
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    security_opt:
      - apparmor:docker-default
    depends_on:
      - gateway
    expose:
      - 53
      - 53/udp
      - 67/udp
      - 68/udp
    networks:
      internet:
      upstream:

#
################################################################################
#

volumes:
  acsdb:
  genieacs:
  web:

#
################################################################################
#

networks:
  telco0:
    driver: macvlan
  home0:
    driver: macvlan
    driver_opts:
      parent: ${MY_DUT_INTERFACE}
  upstream:
    driver: macvlan
    driver_opts:
      parent: ${MY_UPSTREAM_INTERFACE}

# continue only after the openacs has been started by jboss, and genieacs is up and running
#nbs wait;acs;Started in
#nbs wait;genieacs;spawned: 'genieacs-ui'
#nbs resolve;telco0
#nbs resolve;home0
#nbs resolve;upstream
#nbs url;openACS;telco0.public:9000/openacs
#nbs url;apache;telco0.public
#nbs url;GenieACS;telco0.public:7557/devices
