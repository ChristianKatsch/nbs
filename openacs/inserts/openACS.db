-- MySQL dump 10.13  Distrib 5.7.25, for Linux (x86_64)
--
-- Host: ::1    Database: ACS
-- ------------------------------------------------------
-- Server version	5.5.62

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `ACS`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `ACS` /*!40100 DEFAULT CHARACTER SET latin1 */;

USE `ACS`;

--
-- Table structure for table `ATMErrorsStatsBean`
--

DROP TABLE IF EXISTS `ATMErrorsStatsBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ATMErrorsStatsBean` (
  `hostid` int(11) NOT NULL,
  `time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `type` int(11) NOT NULL,
  `intervalStart` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `ATUCCRCErrors` bigint(20) DEFAULT NULL,
  `ATUCFECErrors` bigint(20) DEFAULT NULL,
  `ATUCHECErrors` bigint(20) DEFAULT NULL,
  `CellDelin` bigint(20) DEFAULT NULL,
  `CRCErrors` bigint(20) DEFAULT NULL,
  `ErroredSecs` bigint(20) DEFAULT NULL,
  `FECErrors` bigint(20) DEFAULT NULL,
  `HECErrors` bigint(20) DEFAULT NULL,
  `InitErrors` bigint(20) DEFAULT NULL,
  `InitTimeouts` bigint(20) DEFAULT NULL,
  `LinkRetrain` bigint(20) DEFAULT NULL,
  `LossOfFraming` bigint(20) DEFAULT NULL,
  `ReceiveBlocks` bigint(20) DEFAULT NULL,
  `SeverelyErroredSecs` bigint(20) DEFAULT NULL,
  `TransmitBlocks` bigint(20) DEFAULT NULL,
  `LossOfPower` bigint(20) DEFAULT NULL,
  `LossOfSignal` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`hostid`,`time`,`type`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ATMErrorsStatsBean`
--

LOCK TABLES `ATMErrorsStatsBean` WRITE;
/*!40000 ALTER TABLE `ATMErrorsStatsBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `ATMErrorsStatsBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `BackupBean`
--

DROP TABLE IF EXISTS `BackupBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BackupBean` (
  `hostid` int(11) NOT NULL,
  `type` int(11) NOT NULL,
  `time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `cfg` longblob,
  PRIMARY KEY (`hostid`,`type`,`time`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `BackupBean`
--

LOCK TABLES `BackupBean` WRITE;
/*!40000 ALTER TABLE `BackupBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `BackupBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ConfigurationBean`
--

DROP TABLE IF EXISTS `ConfigurationBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ConfigurationBean` (
  `hwid` int(11) NOT NULL,
  `name` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
  `config` longblob,
  `filename` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `version` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  PRIMARY KEY (`hwid`,`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ConfigurationBean`
--

LOCK TABLES `ConfigurationBean` WRITE;
/*!40000 ALTER TABLE `ConfigurationBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `ConfigurationBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `DSLStatsBean`
--

DROP TABLE IF EXISTS `DSLStatsBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `DSLStatsBean` (
  `hostid` int(11) NOT NULL,
  `time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `DownstreamAttenuation` int(11) DEFAULT NULL,
  `DownstreamCurrRate` int(11) DEFAULT NULL,
  `DownstreamMaxRate` int(11) DEFAULT NULL,
  `DownstreamNoiseMargin` int(11) DEFAULT NULL,
  `DownstreamPower` int(11) DEFAULT NULL,
  `UpstreamAttenuation` int(11) DEFAULT NULL,
  `UpstreamCurrRate` int(11) DEFAULT NULL,
  `UpstreamMaxRate` int(11) DEFAULT NULL,
  `UpstreamNoiseMargin` int(11) DEFAULT NULL,
  `UpstreamPower` int(11) DEFAULT NULL,
  `Status` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `ModulationType` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  PRIMARY KEY (`hostid`,`time`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `DSLStatsBean`
--

LOCK TABLES `DSLStatsBean` WRITE;
/*!40000 ALTER TABLE `DSLStatsBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `DSLStatsBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `DataModelBean`
--

DROP TABLE IF EXISTS `DataModelBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `DataModelBean` (
  `name` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
  `type` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `min` bigint(20) NOT NULL,
  `max` bigint(20) NOT NULL,
  `length` int(11) NOT NULL,
  `description` longblob,
  `version` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `defaultvalue` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `writable` tinyint(4) NOT NULL,
  `trname` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  PRIMARY KEY (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `DataModelBean`
--

LOCK TABLES `DataModelBean` WRITE;
/*!40000 ALTER TABLE `DataModelBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `DataModelBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `DeviceProfile2SoftwareBean`
--

DROP TABLE IF EXISTS `DeviceProfile2SoftwareBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `DeviceProfile2SoftwareBean` (
  `profileName` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
  `hwid` int(11) NOT NULL,
  `version` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  PRIMARY KEY (`profileName`,`hwid`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `DeviceProfile2SoftwareBean`
--

LOCK TABLES `DeviceProfile2SoftwareBean` WRITE;
/*!40000 ALTER TABLE `DeviceProfile2SoftwareBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `DeviceProfile2SoftwareBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `DeviceProfileBean`
--

DROP TABLE IF EXISTS `DeviceProfileBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `DeviceProfileBean` (
  `name` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
  `informinterval` int(11) DEFAULT NULL,
  `dayskeepstats` int(11) DEFAULT NULL,
  `savestats` tinyint(4) DEFAULT NULL,
  `saveLog` tinyint(4) DEFAULT NULL,
  `saveParamValues` tinyint(4) DEFAULT NULL,
  `saveParamValuesInterval` int(11) DEFAULT NULL,
  `saveParamValuesOnChange` tinyint(4) DEFAULT NULL,
  `saveParamValuesOnBoot` tinyint(4) DEFAULT NULL,
  `scriptname` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `baseprofile` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  PRIMARY KEY (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `DeviceProfileBean`
--

LOCK TABLES `DeviceProfileBean` WRITE;
/*!40000 ALTER TABLE `DeviceProfileBean` DISABLE KEYS */;
INSERT INTO `DeviceProfileBean` VALUES ('Default',1800,7,1,NULL,NULL,7,1,1,NULL,NULL);
/*!40000 ALTER TABLE `DeviceProfileBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `HardwareModelBean`
--

DROP TABLE IF EXISTS `HardwareModelBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `HardwareModelBean` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `oui` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `hclass` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `DisplayName` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `manufacturer` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `version` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `profileToAssign` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `kmodels` (`oui`,`hclass`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `HardwareModelBean`
--

LOCK TABLES `HardwareModelBean` WRITE;
/*!40000 ALTER TABLE `HardwareModelBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `HardwareModelBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `Host2ServiceBean`
--

DROP TABLE IF EXISTS `Host2ServiceBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Host2ServiceBean` (
  `hostid` int(11) NOT NULL,
  `serviceid` int(11) NOT NULL,
  `instance` int(11) NOT NULL,
  `parentServiceId` int(11) DEFAULT NULL,
  `parentServiceInstance` int(11) DEFAULT NULL,
  PRIMARY KEY (`hostid`,`serviceid`,`instance`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Host2ServiceBean`
--

LOCK TABLES `Host2ServiceBean` WRITE;
/*!40000 ALTER TABLE `Host2ServiceBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `Host2ServiceBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `HostPropertyBean`
--

DROP TABLE IF EXISTS `HostPropertyBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `HostPropertyBean` (
  `parentId` int(11) NOT NULL,
  `name` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
  `value` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  PRIMARY KEY (`parentId`,`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `HostPropertyBean`
--

LOCK TABLES `HostPropertyBean` WRITE;
/*!40000 ALTER TABLE `HostPropertyBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `HostPropertyBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `HostsBean`
--

DROP TABLE IF EXISTS `HostsBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `HostsBean` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `serialno` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `url` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `configname` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `currentsoftware` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `sfwupdtime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `sfwupdres` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `cfgupdres` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `lastcontact` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `cfgupdtime` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `hardware` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `cfgversion` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `props` longblob,
  `hwid` int(11) DEFAULT NULL,
  `username` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `password` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `authtype` int(11) DEFAULT NULL,
  `customerid` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `conrequser` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `conreqpass` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `cfgforce` tinyint(4) DEFAULT NULL,
  `profileName` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `forcePasswords` tinyint(4) DEFAULT NULL,
  `reboot` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `khosts` (`hwid`,`serialno`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `HostsBean`
--

LOCK TABLES `HostsBean` WRITE;
/*!40000 ALTER TABLE `HostsBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `HostsBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `OuiMapBean`
--

DROP TABLE IF EXISTS `OuiMapBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `OuiMapBean` (
  `oui` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
  `mappedoui` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  PRIMARY KEY (`oui`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `OuiMapBean`
--

LOCK TABLES `OuiMapBean` WRITE;
/*!40000 ALTER TABLE `OuiMapBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `OuiMapBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ProfilePropertyBean`
--

DROP TABLE IF EXISTS `ProfilePropertyBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ProfilePropertyBean` (
  `profilename` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
  `name` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
  `value` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  PRIMARY KEY (`profilename`,`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ProfilePropertyBean`
--

LOCK TABLES `ProfilePropertyBean` WRITE;
/*!40000 ALTER TABLE `ProfilePropertyBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `ProfilePropertyBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `PropertyBean`
--

DROP TABLE IF EXISTS `PropertyBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `PropertyBean` (
  `parentId` int(11) NOT NULL,
  `type` int(11) NOT NULL,
  `name` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
  `value` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  PRIMARY KEY (`parentId`,`type`,`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `PropertyBean`
--

LOCK TABLES `PropertyBean` WRITE;
/*!40000 ALTER TABLE `PropertyBean` DISABLE KEYS */;
INSERT INTO `PropertyBean` VALUES (0,1,'NoNATNet','');
/*!40000 ALTER TABLE `PropertyBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ScriptBean`
--

DROP TABLE IF EXISTS `ScriptBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ScriptBean` (
  `name` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
  `script` longblob,
  `description` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  PRIMARY KEY (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ScriptBean`
--

LOCK TABLES `ScriptBean` WRITE;
/*!40000 ALTER TABLE `ScriptBean` DISABLE KEYS */;
INSERT INTO `ScriptBean` VALUES ('1-PrintDeviceInfo','// Get Serial Number and create Log-Prefix from Inform sent by device\r\n// Serial Number\r\nvar xLogPrefix = \"\\n* \"+cpe.Inform.DeviceId.SerialNumber+ \" \";\r\n\r\nxMessage = xLogPrefix + \" DeviceId:\";\r\nxMessage += xLogPrefix + \"    Manufacturer:  \" + cpe.Inform.DeviceId.Manufacturer;\r\nxMessage += xLogPrefix + \"    OUI:           \" + cpe.Inform.DeviceId.OUI;\r\nxMessage += xLogPrefix + \"    ProductClass:  \" + cpe.Inform.DeviceId.ProductClass;\r\nxMessage += xLogPrefix + \"    SerialNumber:  \" + cpe.Inform.DeviceId.SerialNumber;\r\nxMessage += xLogPrefix + \" Misc:\";\r\nxMessage += xLogPrefix + \"    MaxEnvelopes:  \" + cpe.Inform.MaxEnvelopes;\r\nxMessage += xLogPrefix + \"    RetryCount:    \" + cpe.Inform.RetryCount;\r\nxMessage += xLogPrefix + \"    CurrentTime:   \" + cpe.Inform.CurrentTime;\r\n\r\n// ------------------------------------------------------------------------------\r\n// Events\r\nxMessage += xLogPrefix + \" Events:\";\r\nfor (i = 0; i <= cpe.Inform.Event.length - 1; i++)\r\n    xMessage += xLogPrefix + cpe.Inform.Event[i].EventCode + \" [\" + cpe.Inform.Event[i].CommandKey + \"]\";\r\n\r\n// ------------------------------------------------------------------------------\r\n// Parameters\r\nxMessage += xLogPrefix + \" Params:\";\r\n\r\nfor (i = 0; i <= cpe.Inform.ParameterList.length - 1; i++) {\r\n    xMessage += xLogPrefix + \"    \" + cpe.Inform.ParameterList[i].Name + \"=\" + cpe.Inform.ParameterList[i].Value;\r\n    if (cpe.Inform.ParameterList[i].Name == \"InternetGatewayDevice.ManagementServer.ConnectionRequestURL\") {\r\n        ConnURL=cpe.Inform.ParameterList[i].Value;\r\n        xMessage += xLogPrefix + \"    ConURL:   \" + ConnURL;\r\n    }\r\n}\r\nxMessage += xLogPrefix + \"   *********************************************************\";\r\nlogger(xMessage);','Visual representation of the INFORM-RPC'),('2-Configure','sn=\"2-Configure\"\r\nlogger(xLogPrefix + \">>>> start \"+sn+\" <<<<\");\r\n\r\n//****** VARS **************************************************************************************************//\r\n//   ->Define Variable\r\nvar un = \"Admin\";\r\nvar pw = \"devolo\";\r\nvar inform = 300;\r\n\r\n//******* LOG **************************************************************************************************//\r\nxMessage = xLogPrefix + \" Setting Device.ManagementServer.ConnectionRequestUsername: \" + un;\r\nxMessage += xLogPrefix + \" Setting Device.ManagementServer.ConnectionRequestPassword: \" + pw;\r\nxMessage += xLogPrefix + \" Setting Device.ManagementServer.PeriodicInformInterval: \" + inform;\r\n\r\nvar parameters = new Array();\r\n\r\nparameters.push({ name: \"Device.ManagementServer.ConnectionRequestUsername\", value:un, type: \"xsd:string\"});\r\nparameters.push({ name: \"Device.ManagementServer.ConnectionRequestPassword\", value:pw, type: \"xsd:string\"});\r\nparameters.push({ name: \"Device.ManagementServer.PeriodicInformInterval\", value:inform, type: \"xsd:unsignedInt\"});\r\n\r\ntry{\r\n   response = cpe.SetParameterValues(parameters, \"SPVDefault\");\r\n}\r\ncatch(e){\r\n   logger(xLogPrefix + \" \" + e.message);\r\n}\r\n\r\nlogger(xMessage);\r\nlogger(xLogPrefix + \">>>> end   \"+sn+\" <<<<\");\r\n','Configuration of user name, password and periodic INFORM intervall'),('Default','logger(\"\\n*************************************************************************\");\r\n\r\nvar response = new Array();\r\n\r\n//First print the device information\r\ncall(\"1-PrintDeviceInfo\");\r\nvar sEvent;\r\nvar sCommandKey;\r\nfor( i=0; i<=cpe.Inform.Event.length-1; i++ )\r\n{\r\n    sEvent = cpe.Inform.Event[i].EventCode;\r\n    sCommandKey = cpe.Inform.Event[i].CommandKey;\r\n\r\n    switch ( sEvent )\r\n    {\r\n        case \"0 BOOTSTRAP\":\r\n            logger(xLogPrefix + \">>>> 0 Bootstrap <<<<\");\r\n            break;\r\n\r\n        case \"1 BOOT\":\r\n            logger(xLogPrefix + \">>>> 1 Boot <<<<\");\r\n            call(\"2-Configure\");\r\n            call(\"SPV_STUN\");\r\n            call(\"SPV_XMPP\");\r\n            break;\r\n\r\n        case \"2 PERIODIC\":\r\n            logger(xLogPrefix + \">>>> 2 Periodic <<<<\");\r\n            break;\r\n\r\n        case \"3 SCHEDULED\":\r\n            logger(xLogPrefix + \">>>> 3 Scheduled <<<<\");\r\n	    break;\r\n\r\n        case \"4 VALUE CHANGE\":\r\n            logger(xLogPrefix + \">>>> 4 Value Changed <<<<\");\r\n            break;\r\n\r\n        case \"5 KICKED\":\r\n            logger(xLogPrefix + \">>>> 5 Kicked (depricated!) <<<<\");\r\n            break;\r\n\r\n        case \"6 CONNECTION REQUEST\":\r\n            logger(xLogPrefix + \">>>> 6 Connection Request <<<<\");\r\n            call(\"SPV_XMPP\");\r\n            break;\r\n\r\n        case \"7 TRANSFER COMPLETE\":\r\n            logger(xLogPrefix + \">>>> 7 Transfer Complete <<<<\");\r\n            call(\"OnTransferComplete\");\r\n            break;\r\n\r\n        case \"8 DIAGNOSTICS COMPLETE\":\r\n            logger(xLogPrefix + \">>>> 8 Diagnostics Complete <<<<\");\r\n            break;\r\n\r\n        case \"M Download\":\r\n            logger(xLogPrefix + \">>>> M Download <<<<\");\r\n            break;\r\n\r\n        case \"M Reboot\":\r\n            logger(xLogPrefix + \">>>> M Reboot <<<<\");\r\n            break;\r\n    }\r\n}\r\nlogger(\"\\n*************************************************************************\");','Default Skript that presents the Inform Message from the CPE and allows to call other Skripts depending on the event'),('OnTransferComplete','//\r\n// OnTransferComplete is called automatically by openACS. \r\n// During Calling the serial number of the device is not available.\r\n//\r\n\r\nsn=\"OnTransferComplete\";\r\nlogger(\"* \" + \">>>> start \"+sn+\" <<<<\");\r\n\r\nfor(var propertyName in cpe.TransferComplete) {\r\n   logger(\"* \" + propertyName + \' = \' + cpe.TransferComplete[propertyName]);\r\n}\r\n\r\nlogger(\"* \" + \">>>> end \"+sn+\" <<<<\");','Called by ACS'),('SPV_STUN','sn=\"SPV-Stun\"\r\nlogger(xLogPrefix + \">>>> start \"+sn+\" <<<<\");\r\n\r\n//****** VARS ***********************************************************************************************\r\nvar stunserver = \"telco0.public\";\r\n\r\nvar stunport = 3478;\r\n//var stunpw = \"test1234\";\r\n\r\n//******* LOG **************************************************************************************************\r\nxMessage = xLogPrefix + \' Setting Device.ManagementServer.STUNServerAddress: \' + stunserver;\r\nxMessage += xLogPrefix + \' Setting Device.ManagementServer.STUNServerPort: \' + stunport;\r\n//xMessage += xLogPrefix + \' Setting Device.ManagementServer.STUNpassword: \' + stunpw;\r\n\r\n\r\n//******* ACTION ***********************************************************************************************\r\nvar parameters = new Array();\r\n\r\nparameters.push({ name: \'Device.ManagementServer.STUNServerAddress\', value:stunserver, type: \'xsd:string\'});\r\nparameters.push({ name: \'Device.ManagementServer.STUNServerPort\', value:stunport, type: \'xsd:unsignedInt\'});\r\n//parameters.push({ name: \'Device.ManagementServer.STUNPassword\', value:stunpw, type: \'xsd:string\'});\r\n\r\ntry{\r\n    response = cpe.SetParameterValues(parameters, \"SPV-STUN\");\r\n    logger(xMessage);\r\n\r\n    var sss = new Array();\r\n    sss.push({ name: \'Device.ManagementServer.STUNEnable\', value:\'1\', type: \'xsd:boolean\'});\r\n\r\n    try{\r\n            response = cpe.SetParameterValues(sss, \"SPV-STUN Enable\");\r\n            xMessage = xLogPrefix + \' Setting Device.ManagementServer.STUNEnable: enabled\';\r\n            logger(xMessage);\r\n    }\r\n    catch(e){\r\n       logger(xLogPrefix + \" \" + e.message);\r\n    }\r\n}\r\ncatch(e){\r\n   logger(xLogPrefix + \" \" + e.message);\r\n}\r\n\r\nlogger(xLogPrefix + \">>>> end   \"+sn+\" <<<<\");','Set Parameters for STUN connection request and call SPV-STUNEnable'),('SPV_XMPP','sn=\"XMPP2\"\r\nlogger(xLogPrefix + \">>>> start \"+sn+\" <<<<\");\r\n\r\n//****** VARS *********************************************************************\r\n\r\nvar xmppuser = \"cpe\";\r\nvar xmpppass = \"devolo\";\r\nvar xmppdomain = \"xmpp.public\";\r\n\r\nvar xmppresource = \"my_fixed_xmpp_resource\";\r\n//var usetls = \"true\";\r\nvar usetls = \"false\";\r\nvar CReqXMPPCon = \"Device.XMPP.Connection.1\";\r\n\r\nvar keepAlive = 120;\r\nvar server = \"xmpp.public\";\r\n\r\nvar port = \"5222\";\r\nvar conalg = \"ServerTable\";\r\n\r\nvar conen = \"true\";\r\nvar seren = \"true\";\r\n\r\ntry{\r\n   call(\"SPVof\", key=\"Device.XMPP.Connection.1.Username\", value= xmppuser, type=\"xsd:string\",cmdk=\"dummy_string\");    \r\n}\r\ncatch(e){\r\n    logger(xLogPrefix + \" \" + e.message);\r\n}\r\n\r\ntry{\r\n   call(\"SPVof\", key=\"Device.XMPP.Connection.1.Password\", value=xmpppass, type=\"xsd:string\",cmdk=\"dummy_string\");    \r\n}\r\ncatch(e){\r\n    logger(xLogPrefix + \" \" + e.message);\r\n}\r\n\r\ntry{\r\n   call(\"SPVof\", key=\"Device.XMPP.Connection.1.Domain\", value=xmppdomain,type=\"xsd:string\",cmdk=\"dummy_string\");    \r\n}\r\ncatch(e){\r\n    logger(xLogPrefix + \" \" + e.message);\r\n}\r\n\r\ntry{\r\n   call(\"SPVof\", key=\"Device.XMPP.Connection.1.Resource\", value=xmppresource, type=\"xsd:string\",cmdk=\"dummy_string\");    \r\n}\r\ncatch(e){\r\n    logger(xLogPrefix + \" \" + e.message);\r\n}\r\n\r\ntry{  call(\"SPVof\",key=\"Device.XMPP.Connection.1.Server.1.ServerAddress\",value=server,type=\"xsd:string\",cmdk=\"dummy_string\");\r\n}\r\ncatch(e){\r\n    logger(xLogPrefix + \" \" + e.message);\r\n}\r\n\r\ntry{\r\n   call(\"SPVof\", key=\"Device.XMPP.Connection.1.Server.1.Port\", value=port, type=\"xsd:unsignedint\",cmdk=\"dummy_string\");    \r\n}\r\ncatch(e){\r\n   logger(xLogPrefix + \" \" + e.message);\r\n}\r\n\r\ntry{\r\n   call(\"SPVof\", key=\"Device.XMPP.Connection.1.UseTLS\", value=usetls, type=\"xsd:boolean\",cmdk=\"dummy_string\");    \r\n}\r\ncatch(e){\r\n    logger(xLogPrefix + \" \" + e.message);\r\n}\r\n\r\ntry{\r\n  call(\"SPVof\", key=\"Device.XMPP.Connection.1.KeepAliveInterval\", value=keepAlive, type=\"xsd:long\",cmdk=\"dummy_string\");    \r\n}\r\ncatch(e){\r\n    logger(xLogPrefix + \" \" + e.message);\r\n}\r\n\r\ntry{\r\n  call(\"SPVof\", key=\"Device.XMPP.Connection.1.ServerConnectAlgorithm\", value=conalg, type=\"xsd:string\",cmdk=\"dummy_string\");    \r\n}\r\ncatch(e){\r\n    logger(xLogPrefix + \" \" + e.message);\r\n}\r\n\r\ntry{\r\n  call(\"SPVof\", key=\"Device.XMPP.Connection.1.Server.1.Enable\", value=seren, type=\"xsd:boolean\",cmdk=\"dummy_string\");    \r\n}\r\ncatch(e){\r\n    logger(xLogPrefix + \" \" + e.message);\r\n}\r\n\r\ntry{\r\n  call(\"SPVof\", key=\"Device.XMPP.Connection.1.Enable\", value=conen, type=\"xsd:boolean\",cmdk=\"dummy_string\");    \r\n}\r\ncatch(e){\r\n    logger(xLogPrefix + \" \" + e.message);\r\n}\r\n\r\ntry{\r\n   call(\"SPVof\", key=\"Device.ManagementServer.ConnReqXMPPConnection\", value=CReqXMPPCon, type=\"xsd:string\",cmdk=\"dummy_string\");    \r\n}\r\ncatch(e){\r\n    logger(xLogPrefix + \" \" + e.message);\r\n}\r\n\r\nlogger(xLogPrefix + \">>>> end   \"+sn+\" <<<<\");','Set defaults for XMPP'),('SPVof','//\r\n//Use in other scripts\r\n// call(\'SPVof\', key=\'keyname\', value=\'value\', type=\'type\', cmdk=\'cmdk\');\r\n// wrap in try-catch block\r\n// In case of boolean type quote the boolean expression i.e. value=\"false\"\r\n//\r\n\r\n\r\nsn=\"SPVof\";\r\nlogger(xLogPrefix + \">>>> start \"+sn+\" <<<<\");\r\n\r\n//****** VARS *********************************************************************\r\nvar xkey = \"\";\r\nvar xvalue = \"\";\r\nvar xtype = \"\";\r\nvar xcmdk = \"\";\r\n\r\nif(key){\r\n  this.xkey = key;\r\n}\r\nelse{\r\n  throw new Error(\"useage: call(\'SPVof\', key=\'key\', value=\'value\', type=\'type\', cmdk=\'cmdk\');\")\r\n}\r\nif(value){\r\n   this.xvalue = value;\r\n}\r\nelse{\r\n  throw new Error(\"useage: call(\'SPVof\', key=\'key\', value=\'value\', type=\'type\', cmdk=\'cmdk\');\")\r\n}\r\nif(type){\r\n   this.xtype = type;\r\n}\r\nelse{\r\n  throw new Error(\"useage: call(\'SPVof\', key=\'key\', value=\'value\', type=\'type\', cmdk=\'cmdk\');\")\r\n}\r\nif(cmdk){\r\n  this.xcmdk = cmdk;\r\n}\r\nelse{\r\n  throw new Error(\"useage: call(\'SPVof\', key=\'key\', value=\'value\', type=\'type\', cmdk=\'cmdk\');\")\r\n}\r\n\r\n//******* LOG *********************************************************************\r\nxMessage = xLogPrefix + \' SPV(\' + this.xkey + \', \' + this.xvalue + \', \' + this.xtype + \', \' + this.xcmdk + \')\';\r\n\r\n\r\n//******* ACTION ******************************************************************\r\n\r\nvar parameters = new Array();\r\nparameters.push({ name:key, value:value, type:type});\r\n\r\ntry{\r\n    response = cpe.SetParameterValues(parameters, xcmdk);\r\n    logger(xMessage);\r\n\r\n}\r\ncatch(e){\r\n   logger(xLogPrefix + \" \" + e.message);\r\n}\r\n\r\nlogger(xLogPrefix + \">>>> end   \"+sn+\" <<<<\");','Generic script to set values');
/*!40000 ALTER TABLE `ScriptBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ServiceBean`
--

DROP TABLE IF EXISTS `ServiceBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ServiceBean` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `description` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `type` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `defaultparentservice` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ServiceBean`
--

LOCK TABLES `ServiceBean` WRITE;
/*!40000 ALTER TABLE `ServiceBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `ServiceBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ServicePropertyBean`
--

DROP TABLE IF EXISTS `ServicePropertyBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ServicePropertyBean` (
  `serviceid` int(11) NOT NULL,
  `name` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
  `value` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `isparam` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`serviceid`,`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ServicePropertyBean`
--

LOCK TABLES `ServicePropertyBean` WRITE;
/*!40000 ALTER TABLE `ServicePropertyBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `ServicePropertyBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `SoftwareBean`
--

DROP TABLE IF EXISTS `SoftwareBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `SoftwareBean` (
  `hwid` int(11) NOT NULL,
  `version` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
  `minversion` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `url` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  `size` bigint(20) NOT NULL,
  `filename` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  PRIMARY KEY (`hwid`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `SoftwareBean`
--

LOCK TABLES `SoftwareBean` WRITE;
/*!40000 ALTER TABLE `SoftwareBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `SoftwareBean` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `SoftwareDetailBean`
--

DROP TABLE IF EXISTS `SoftwareDetailBean`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `SoftwareDetailBean` (
  `hwid` int(11) NOT NULL,
  `version` varchar(250) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
  `paramNames` longblob,
  `methods` longblob,
  `voicecaps` longblob,
  PRIMARY KEY (`hwid`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `SoftwareDetailBean`
--

LOCK TABLES `SoftwareDetailBean` WRITE;
/*!40000 ALTER TABLE `SoftwareDetailBean` DISABLE KEYS */;
/*!40000 ALTER TABLE `SoftwareDetailBean` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2019-03-12 14:24:48
